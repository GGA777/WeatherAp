import requests
from django.shortcuts import render
from .models import City
from .forms import CityForm

"здесь отображается файл"
"функция получает один обязательный параметр request"


def index(request):
    appid = "b47619200b0bae76fd661ee7952c1456"
    url = 'https://api.openweathermap.org/data/2.5/weather?q={}&units=metric&lang=ru&appid=' + appid

    """Проверка, есть ли сейчас запрос. Если сейчас данные передаются при помощи
    метода POST, это значит что можно записать эти данные в табличку, а также перезагрузить страницу,
    правда, перезагрузка произойдет автоматически, благодаря кнопки submit, написанной в index.html"""

    if request.method == 'POST':
        form = CityForm(request.POST)
        """Создан объект, на основе класса, который содержит форму и, значения, которые передаются
        в класс - это значения, получаемые от пользователя. В CityForm указываем данные, 
        которые получили от пользователя"""
        form.save()
        """сохранение в БД"""

    """clean forms, при перезагрузке страницы, т.е. после нажатия на кнопку - узнать"""
    form = CityForm()

    """выбор всех данных из таблички"""
    cities = City.objects.all()

    """в цикле for перебираем весь массив данных, который теперь есть в cities и добавлять весь этот массив 
    внутрь какого-либо объекта, например объекта city_info, простым языком, получаем информацию о городах и 
    погодных условиях в городах"""

    all_cities = []
    for city in cities:
        "переменная res, requests - это запросы .json() - преобразовываем из json в словарь - city_info"
        res = requests.get(url.format(city.name)).json()

        """Пояснение с словарю city_info - в данном словаре 
        мы берем первой строкой - имя города, далее второй строкой,
        чтобы получить температуру, необходимо сначала обратиться к ключу main, а затем к ключу temp и в 
        результате будет получен желанный параметр - температура. Третья строка , по аналогии, чтобы получить 
        иконку соответствующую погодным условиям, необходимо сначала обратиться к weather, взять вначале элемент
        внутри этого списка, в данном случае [0], а затем уже обратиться по ключу к icon"""
        city_info = {
            'city': city.name,
            'temp': res["main"]["temp"],
            'icon': res["weather"][0]["icon"]
        }

        """после чего, все записывается в наш массив, с помощью append() - добавить новый элемент в список"""
        all_cities.append(city_info)

    ""
    context = {'all_info': all_cities, 'form': form}

    return render(request, 'weather/index.html', context)


"указываем, какой шаблон используем"
